AWSTemplateFormatVersion: 2010-09-09
Description: User serverless microservice
Transform:
    - AWS::Serverless-2016-10-31

Parameters:
    SuperAdminEmail:
        Type: String
        Description: The email address of the default user to be added to the Cognito user pool by default

Globals:
    Function:
        Layers:
            - !Ref RuntimeDependenciesLayer
        Environment:
            Variables:
                SUPER_ADMIN_EMAIL: !Ref SuperAdminEmail
        Runtime: nodejs14.x
        MemorySize: 128
        Timeout: 100
    Api:
        Auth:
            Authorizers:
                MsUserCognitoAuthorizer:
                    UserPoolArn: arn:aws:cognito-idp:us-east-1:653284769887:userpool/us-east-1_iJ9JLuMp7
                    AuthType: COGNITO_USER_POOLS
            DefaultAuthorizer: MsUserCognitoAuthorizer
        Cors:
            AllowMethods: "'GET,OPTIONS'"
            AllowHeaders: "'content-type'"
            AllowOrigin: "'*'"
            AllowCredentials: "'*'"

Resources:
    MsUserAPIFunction:
        Type: AWS::Serverless::Function
        Metadata:
            BuildMethod: makefile
        Properties:
            Handler: dist/handlers/user-ms-handler.handler
            Description: User serverless microservice
            Runtime: nodejs14.x
            Environment:
                Variables:
                    DYNAMODB_URI: ''
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: !Ref DynamoDBUsersTable
                - Statement:
                      - Effect: Allow
                        Resource: '*'
                        Action:
                            - events:PutEvents
            Events:
                Healthcheck:
                    Type: Api
                    Properties:
                        Path: /healthcheck
                        Auth:
                            Authorizer: NONE
                        Method: get
                # Users endpoints
                UsersV0Get:
                    Type: Api
                    Properties:
                        Path: /v0/users
                        Auth:
                            Authorizer: NONE
                        Method: get
                UsersV0Post:
                    Type: Api
                    Properties:
                        Path: /v0/users
                        Method: post

    # Shared layer with Lambda runtime dependencies
    RuntimeDependenciesLayer:
        Type: AWS::Serverless::LayerVersion
        Metadata:
            BuildMethod: makefile
        Properties:
            LayerName: 'ms-user-dependencies'
            Description: Runtime dependencies for Lambdas
            ContentUri: ./
            CompatibleRuntimes:
                - nodejs14.x
            RetentionPolicy: Retain

    DynamoDBUsersTable:
        Type: AWS::DynamoDB::Table
        Properties:
            BillingMode: PAY_PER_REQUEST
            TableName: ms-user
            AttributeDefinitions:
                - AttributeName: id
                  AttributeType: S
            KeySchema:
                - AttributeName: id
                  KeyType: HASH

Outputs:
    MsUserAPIProd:
        Description: 'API Gateway endpoint URL for Prod environment'
        Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
    MsUserAPIStage:
        Description: 'API Gateway endpoint URL for Stage environment'
        Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Stage'
    MsUserAPIFunction:
        Description: 'User API Lambda Function ARN'
        Value: !GetAtt MsUserAPIFunction.Arn
    MsUserAPIFunctionIamRole:
        Description: 'Implicit IAM Role created for User API function'
        Value: !GetAtt MsUserAPIFunctionRole.Arn
